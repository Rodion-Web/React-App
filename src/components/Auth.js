import React, { useState } from "react";
import "./Auth.css";

const Auth = ({ onLogin, onLogout, isAuthenticated, currentUser }) => {
  const [email, setEmail] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState("");

  const handleLogin = async (e) => {
    e.preventDefault();

    if (!email.trim()) {
      setError("–í–≤–µ–¥–∏—Ç–µ email");
      return;
    }

    if (!isValidEmail(email)) {
      setError("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email");
      return;
    }

    setIsLoading(true);
    setError("");

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ UX
      await new Promise((resolve) => setTimeout(resolve, 1000));

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const token = generateToken(email);
      const user = {
        email: email.trim().toLowerCase(),
        token,
        createdAt: new Date().toISOString(),
      };

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
      localStorage.setItem("currentUser", JSON.stringify(user));

      onLogin(user);
    } catch (err) {
      setError("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    } finally {
      setIsLoading(false);
    }
  };

  const handleLogout = () => {
    localStorage.removeItem("currentUser");
    onLogout();
  };

  const isValidEmail = (email) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  const generateToken = (email) => {
    // –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ email –∏ –≤—Ä–µ–º–µ–Ω–∏
    const timestamp = Date.now().toString();
    const emailHash = btoa(email).replace(/[^a-zA-Z0-9]/g, "");
    return `${emailHash}_${timestamp}`;
  };

  if (isAuthenticated) {
    return (
      <div className="auth-container">
        <div className="user-info">
          <span className="user-email">{currentUser.email}</span>
          <button onClick={handleLogout} className="logout-button">
            –í—ã–π—Ç–∏
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="auth-container">
      <div className="auth-form">
        <h2>–í—Ö–æ–¥ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–¥–∞—á</h2>
        <p className="auth-description">
          –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –¥–ª—è –≤—Ö–æ–¥–∞. –ó–∞–¥–∞—á–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è –≤–∞—à–µ–≥–æ
          –∞–∫–∫–∞—É–Ω—Ç–∞.
        </p>

        <form onSubmit={handleLogin}>
          <div className="form-group">
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="your@email.com"
              className="email-input"
              disabled={isLoading}
            />
          </div>

          {error && <div className="error-message">{error}</div>}

          <button
            type="submit"
            className="login-button"
            disabled={isLoading || !email.trim()}
          >
            {isLoading ? "–í—Ö–æ–¥..." : "–í–æ–π—Ç–∏"}
          </button>
        </form>

        <div className="auth-features">
          <div className="feature">
            <span className="feature-icon">üîí</span>
            <span>–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—Ö–æ–¥</span>
          </div>
          <div className="feature">
            <span className="feature-icon">‚òÅÔ∏è</span>
            <span>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏</span>
          </div>
          <div className="feature">
            <span className="feature-icon">üíæ</span>
            <span>–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Auth;
